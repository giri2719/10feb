{"ast":null,"code":"var _jsxFileName = \"/Users/giribabuvelamunaidu/Downloads/react/task6/src/Components/TodoApp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, Card, CardContent, Container, Grid, TextField, Typography } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const handleChange = e => setText(e.target.value);\n\n  const {\n    todoList\n  } = useSelector(state => state.todoReducer); // console.log(todoList);\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoComplete: \"off\",\n          value: text,\n          onChange: handleChange,\n          sx: {\n            width: \"50%\"\n          },\n          label: \"Create Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => dispatch({\n            type: \"add-todo\",\n            text: text\n          }),\n          variant: \"contained\",\n          sx: {\n            width: \"100px\",\n            height: \"50px\",\n            m: 0.4,\n            ml: 3\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: todoList.map((i, j) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              width: \"300px\",\n              m: 1,\n              textAlign: \"left\"\n            },\n            xs: 12,\n            sm: 4,\n            md: 4,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: i.todo.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => dispatch({\n                  type: \"delete\",\n                  id: i.id\n                }),\n                variant: \"contained\",\n                color: \"error\",\n                sx: {\n                  p: 0.6,\n                  mt: 1,\n                  fontSize: \"10px\"\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TodoApp, \"AGvW+wvNAEG3J7tY+FHp6aKcHJo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["/Users/giribabuvelamunaidu/Downloads/react/task6/src/Components/TodoApp.jsx"],"names":["React","useState","Box","Button","Card","CardContent","Container","Grid","TextField","Typography","useDispatch","useSelector","TodoApp","text","setText","handleChange","e","target","value","todoList","state","todoReducer","dispatch","m","width","type","height","ml","map","i","j","textAlign","todo","toUpperCase","id","p","mt","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction TodoApp() {\n  const [text, setText] = useState(\"\");\n  const handleChange = (e) => setText(e.target.value);\n  const { todoList } = useSelector((state) => state.todoReducer);\n  // console.log(todoList);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Container>\n        <Box sx={{ m: 5 }}>\n          <TextField\n            autoComplete=\"off\"\n            value={text}\n            onChange={handleChange}\n            sx={{ width: \"50%\" }}\n            label=\"Create Todo\"\n          />\n          <Button\n            onClick={() => dispatch({ type: \"add-todo\", text: text })}\n            variant=\"contained\"\n            sx={{ width: \"100px\", height: \"50px\", m: 0.4, ml: 3 }}\n          >\n            Add\n          </Button>\n        </Box>\n        <Grid container>\n          {todoList.map((i, j) => (\n            <Grid key={j} item>\n              <Card\n                sx={{ width: \"300px\", m: 1, textAlign: \"left\" }}\n                xs={12}\n                sm={4}\n                md={4}\n                lg={6}\n              >\n                <CardContent>\n                  <Typography variant=\"h6\">{i.todo.toUpperCase()}</Typography>\n                  <Button\n                    onClick={() => dispatch({ type: \"delete\", id: i.id })}\n                    variant=\"contained\"\n                    color=\"error\"\n                    sx={{ p: 0.6, mt: 1, fontSize: \"10px\" }}\n                  >\n                    Delete\n                  </Button>\n                  {/* <Typography variant=\"body2\"  color=\"#b3b2b1\" sx={{mt:1.4}}>\n           Created in : {i.date} {i.time}\n          </Typography> */}\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}
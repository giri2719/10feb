{"ast":null,"code":"import { ADD_TODO, DELETE_TODO } from \"../Actions/Actions\";\nconst initialValue = {\n  todoList: []\n};\n\nfunction todoReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      if (action.text !== '') {\n        let id = Date.now();\n        let date = new Date().toDateString();\n        let a = new Date().getHours().toString();\n        let b = new Date().getMinutes().toString();\n        let time = a + \":\" + b;\n        return { ...state,\n          todoList: [...state.todoList, {\n            id: id,\n            todo: action.text.trim(),\n            date: date,\n            time: time\n          }]\n        };\n      } else {\n        alert('Type Something....!');\n      }\n\n      return state;\n\n    case DELETE_TODO:\n      return { ...state,\n        todoList: state.todoList.filter(i => i.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/giribabuvelamunaidu/Downloads/react/task6/src/Reducers/Reducer.jsx"],"names":["ADD_TODO","DELETE_TODO","initialValue","todoList","todoReducer","state","action","type","text","id","Date","now","date","toDateString","a","getHours","toString","b","getMinutes","time","todo","trim","alert","filter","i"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAGA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,QAAL;AACG,UAAGM,MAAM,CAACE,IAAP,KAAc,EAAjB,EAAoB;AAClB,YAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,EAAT;AACA,YAAIC,IAAI,GAAG,IAAIF,IAAJ,GAAWG,YAAX,EAAX;AACA,YAAIC,CAAC,GAAG,IAAIJ,IAAJ,GAAWK,QAAX,GAAsBC,QAAtB,EAAR;AACA,YAAIC,CAAC,GAAG,IAAIP,IAAJ,GAAWQ,UAAX,GAAwBF,QAAxB,EAAR;AACA,YAAIG,IAAI,GAAGL,CAAC,GAAG,GAAJ,GAAUG,CAArB;AAEA,eAAO,EACL,GAAGZ,KADE;AAELF,UAAAA,QAAQ,EAAE,CACR,GAAGE,KAAK,CAACF,QADD,EAER;AAAEM,YAAAA,EAAE,EAAEA,EAAN;AAAUW,YAAAA,IAAI,EAAGd,MAAM,CAACE,IAAR,CAAca,IAAd,EAAhB;AAAsCT,YAAAA,IAAI,EAAEA,IAA5C;AAAkDO,YAAAA,IAAI,EAAEA;AAAxD,WAFQ;AAFL,SAAP;AAOD,OAdD,MAeI;AACDG,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACF;;AACD,aAAOjB,KAAP;;AAEJ,SAAKJ,WAAL;AACG,aAAO,EAAC,GAAGI,KAAJ;AAAUF,QAAAA,QAAQ,EAACE,KAAK,CAACF,QAAN,CAAeoB,MAAf,CAAsBC,CAAC,IAAEA,CAAC,CAACf,EAAF,KAASH,MAAM,CAACG,EAAzC;AAAnB,OAAP;;AACF;AACE,aAAOJ,KAAP;AAzBJ;AA2BD;;AAED,eAAeD,WAAf","sourcesContent":["import { ADD_TODO, DELETE_TODO } from \"../Actions/Actions\";\n\nconst initialValue = {\n  todoList: [],\n};\nfunction todoReducer(state = initialValue, action) {\n  switch (action.type) {\n    case ADD_TODO:\n       if(action.text!==''){\n         let id = Date.now();\n         let date = new Date().toDateString();\n         let a = new Date().getHours().toString();\n         let b = new Date().getMinutes().toString();\n         let time = a + \":\" + b;\n   \n         return {\n           ...state,\n           todoList: [\n             ...state.todoList,\n             { id: id, todo: (action.text).trim(), date: date, time: time },\n           ],\n         };\n       }\n       else{\n          alert('Type Something....!')\n       }\n       return state;\n     \n   case DELETE_TODO:\n      return {...state,todoList:state.todoList.filter(i=>i.id !== action.id)}\n    default:\n      return state;\n  }\n}\n\nexport default todoReducer;"]},"metadata":{},"sourceType":"module"}